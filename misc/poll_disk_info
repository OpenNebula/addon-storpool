#!/bin/bash
#
# -------------------------------------------------------------------------- #
# Copyright 2015, StorPool (storpool.com)                                    #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

#---------------------------------------------------------------------------
# The script returns XML with the used size in this device and if there are snapshots the size per snapshot id.
# The XML is parsed and the desired structure is filled up.
#
# Here is the schema for the returned xml:
#
# <?xml version="1.0" encoding="UTF-8" ?>
# <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
#   <xs:element name="disk">
#     <xs:element name="size" type="xs:positiveInteger"/>
#     <xs:element name="snapshot" minOccurs="0" maxOccurs="unbounded">
#       <xs:complexType>
#         <xs:sequence>
#           <xs:element name="id" type="xs:positiveInteger"/>
#           <xs:element name="size" type="xs:positiveInteger"/>
#         </xs:sequence>
#       </xs:complexType>
#     </xs:element>
#   </xs:element>
# </xs:schema>
#---------------------------------------------------------------------------

#set -x
set -e

export PATH=/bin:/sbin:/usr/bin:/usr/sbin:$PATH

disk_size=0

dev="$1"

splog()
{
	logger -t ${0##*/} "$*"
}

SP_SPACE_USED_LVMWAY=

[ -f "../../addon-storpoolrc" ] && source "../../addon-storpoolrc"

if [ -L "$dev" ]; then
	realDev=$(readlink -e $dev)
else
	realDev="$dev"
fi

if [ "${realDev%-*}" = "/dev/sp" ]; then
	spDev=$(readlink $dev)
	spVolume=${spDev#/dev/storpool/}
	if [ -n "$SP_SPACE_USED_LVMWAY" ]; then
		spSize=$(storpool -j volume status | jq -r ".data | map( select( .name==\"${spVolume}\" ) ) | .[] | [.storedSize] | @csv")
	else
		spSize=$(storpool -j volume status | jq -r ".data | map( select( .name==\"${spVolume}\" ) ) | .[] | [.spaceUsed] | @csv")
	fi
	[ -n "$spSize" ] || exit 1
	echo "<disk>"
	echo " <size>$spSize</size>"
	echo " <volume>$spVolume</volume>"
#	splog "$spVolume $storedSize"
	while IFS=',' read name storedSize spaceUsed; do
		name=${name//\"/}
		snap_id=${name#*snap}
		if [ -n "$SP_SPACE_USED_LVMWAY" ]; then
			snap_size=$storedSize
		else
			snap_size=$spaceUsed
		fi
		cat <<EOF
 <snapshot>
  <id>$snap_id</id>
  <size>$snap_size</size>
 </snapshot>
EOF
#		splog "$name $snap_size (used:$spaceUsed)"
	done < <(storpool -j snapshot space | jq -r ".data | map( select( .name | contains(\"${spVolume}-snap\") ) ) | .[] | [.name, .storedSize, .spaceUsed] | @csv" | sort)
else
	disk_size=$(blockdev -q --getsize64 "$realDev")
	[ -n "$disk_size" ] || exit 1
	echo "<disk>"
	echo " <size>$disk_size</size>"
#	splog "$dev $disk_size"
fi
echo "</disk>"
