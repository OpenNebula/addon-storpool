--- remotes/vmm/kvm/poll_disk_info.orig	1970-01-01 02:00:00.000000000 +0200
+++ remotes/vmm/kvm/poll_disk_info	2015-09-05 18:02:39.773640447 +0300
@@ -0,0 +1,81 @@
+#!/bin/bash
+#
+# -------------------------------------------------------------------------- #
+# Copyright 2015, StorPool (storpool.com)                                    #
+#                                                                            #
+# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
+# not use this file except in compliance with the License. You may obtain    #
+# a copy of the License at                                                   #
+#                                                                            #
+# http://www.apache.org/licenses/LICENSE-2.0                                 #
+#                                                                            #
+# Unless required by applicable law or agreed to in writing, software        #
+# distributed under the License is distributed on an "AS IS" BASIS,          #
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
+# See the License for the specific language governing permissions and        #
+# limitations under the License.                                             #
+#--------------------------------------------------------------------------- #
+
+#---------------------------------------------------------------------------
+# The script returns XML with the used size in this device and if there are snapshots the size per snapshot id.
+# The XML is parsed and the desired structure is filled up.
+#
+# Here is the schema for the returned xml:
+#
+# <?xml version="1.0" encoding="UTF-8" ?>
+# <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
+#   <xs:element name="disk">
+#     <xs:element name="size" type="xs:positiveInteger"/>
+#     <xs:element name="snapshot" minOccurs="0" maxOccurs="unbounded">
+#       <xs:complexType>
+#         <xs:sequence>
+#           <xs:element name="id" type="xs:positiveInteger"/>
+#           <xs:element name="size" type="xs:positiveInteger"/>
+#         </xs:sequence>
+#       </xs:complexType>
+#     </xs:element>
+#   </xs:element>
+# </xs:schema>
+#---------------------------------------------------------------------------
+
+#set -x
+set -e
+
+export PATH=/bin:/sbin:/usr/bin:/usr/sbin:$PATH
+
+disk_size=0
+
+dev="$1"
+
+if [ -L "$dev" ]; then
+	realDev=$(readlink -e $dev)
+else
+	realDev="$dev"
+fi
+
+disk_size=$(blockdev -q --getsize64 "$realDev")
+
+[ -n "$disk_size" ] || exit 1
+echo "<disk>"
+echo " <size>$disk_size</size>"
+
+if [ "${realDev%-*}" = "/dev/sp" ]; then
+	spDev=$(readlink $dev)
+	spVolume=${spDev#/dev/storpool/}
+	echo " <volume>$spVolume</volume>"
+	while IFS=',' read snapName objectsCount; do
+		objectsCount=${objectsCount:-0}
+		snapName=${snapName//\"/}
+		snap_id=${snapName#*snap}
+		snap_size=$((onjectsCount * 32 * 1024 * 1024))
+#		echo $spVolume $snap_id $snapName $snapSize >&2
+	cat <<EOF
+ <snapshot>
+  <id>$snap_id</id>
+  <size>$snap_size</size>
+ </snapshot>
+EOF
+	done < <(storpool -j snapshot list | jq -r ".data | map( select( .onVolume==\"$spVolume\" ) ) | .[] | [ .name, .objectsCount ] | @csv ")
+fi
+
+echo "</disk>"
