#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2015-2022, StorPool (storpool.com)                               #
#                                                                            #
# Portions copyright OpenNebula Project, OpenNebula Systems                  #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

#-------------------------------------------------------------------------------
# snapshot_create  domain snap_id vm_id vmhost
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Get snapshot_create arguments from OpenNebula core
#-------------------------------------------------------------------------------

DOMAIN="$1"
SNAP_ID="$2"
VM_ID="$3"
VMHOST="$4"

DRIVER_PATH="$(dirname $0)"
[ -f "${DRIVER_PATH}/../../etc/vmm/kvm/kvmrc" ] && source "${DRIVER_PATH}/../../etc/vmm/kvm/kvmrc" || source "${DRIVER_PATH}/kvmrc"
source "${DRIVER_PATH}/../../scripts_common.sh"
source "${DRIVER_PATH}/../../tm/storpool/storpool_common.sh"

LOG_PREFIX="vmm"

if boolTrue "DEBUG_VMSNAPSHOT"; then
    splog "$0 $*"
fi

if boolTrue "VMSNAPSHOT_OVERRIDE"; then
    oneVmVolumes "$VM_ID"
    oneDatastoreInfo "$VM_DS_ID"

    declare -A diskVolumes
    for v in $vmVolumes; do
        diskVolumes["$v"]="$v"
    done
    if boolTrue "VMSNAPSHOT_WITH_CHECKPOINT"; then
        MEM_VOL="$ONE_PX-sys-$VM_ID"
        diskVolumes["$MEM_VOL"]="$MEM_VOL"
    fi
	while read -u 5 snap vid; do
        if boolTrue "DDEBUG_VMSNAPSHOT"; then
            splog "$snap vid:$vid"
        fi
        snapVol="${snap%-${VMSNAPSHOT_TAG}*}"
        if [ -n "$vid" ]; then
            if [ "$VM_ID" != "$vid" ]; then
                if boolTrue "DEBUG_VMSNAPSHOT"; then
                    splog "Skip $snap (VM_ID $VM_ID != $vid, VM_TAG=$VM_TAG)"
                fi
                continue
            fi
        elif [ "${snap:0:1}" = "*" ]; then
			if boolTrue "DEBUG_VMSNAPSHOT"; then
				splog "Skip $snap (already deleting)"
			fi
			continue
        elif [ -z "${diskVolumes["$snapVol"]}" ]; then
			if boolTrue "DEBUG_VMSNAPSHOT"; then
				splog "Skip $snap (not in vmVolumes:$vmVolumes)"
			fi
			continue
		fi
		storpoolRetry snapshot "$snap" delete "$snap"
	done 5< <(storpoolRetry -j snapshot list |\
				jq -r --arg snp "$SNAP_ID" --arg tag "$VM_TAG" '.data|map(select(.name|contains($snp)))[]|.name+" "+.tags[$tag]')
	splog "END VM_ID=$VM_ID VMHOST=$VMHOST SNAP_ID=$SNAP_ID"
	exit 0
fi
