#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2015-2021, StorPool (storpool.com)                               #
# Portions Copyright OpenNebula Systems                                      #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

workdir=$(dirname "$0")
source "$workdir/../../etc/vmm/kvm/kvmrc"
source "$workdir/../../scripts_common.sh"
source "$workdir/../../tm/storpool/storpool_common.sh"

deploy_id=$1
dest_host=$2
src_host=$3

# migration can't be done with domain snapshots, drop them first
snaps=$(monitor_and_log \
   "virsh --connect $QEMU_PROTOCOL://$src_host/system snapshot-list $deploy_id --name 2>/dev/null" \
   "Failed to get snapshots for $deploy_id")

for snap in $snaps; do
    exec_and_log \
        "virsh --connect $QEMU_PROTOCOL://$src_host/system snapshot-delete $deploy_id --snapshotname $snap --metadata" \
        "Failed to delete snapshot $snap from $deploy_id"
done

tmpDir="$(mktemp -d -p ${ONE_RUNDIR:-/var/run/one} migrate-XXXXXXXX)"

deployXML="$tmpDir/${deploy_id}.xml"
virsh --connect $QEMU_PROTOCOL://$src_host/system dumpxml --migratable $deploy_id >"$deployXML"
splog "($?) virsh --connect $QEMU_PROTOCOL://$src_host/system dumpxml"

vm_id="${deploy_id#one-}"
vmMetaXml="$tmpDir/$vm_id.XML"
onevm show -x "$vm_id" >"$vmMetaXml"

if [ -d "${0}.d" ]; then
    while read -u 4 helper; do
        if [ -x "$helper" ]; then
            $helper "$deployXML" "$vmMetaXml"
            splog "($?) $helper $deployXML $vmMetaXml"
        fi
    done 4< <(find ${0}.d -type f -o -type l)
fi

rm -f "$vmMetaXml"


virsh --connect $QEMU_PROTOCOL://$src_host/system \
    migrate --live $MIGRATE_OPTIONS $deploy_id $QEMU_PROTOCOL://$dest_host/system --xml $deployXML
ret=$?
splog "($ret) virsh --connect $QEMU_PROTOCOL://$src_host/system migrate --live $MIGRATE_OPTIONS $deploy_id $QEMU_PROTOCOL://$dest_host/system --xml $deployXML"

rm -rf "$tmpDir"

if [ $ret -eq 0 ]; then
    if [ "$SYNC_TIME" = "yes" ]; then
        virsh --connect $QEMU_PROTOCOL://$dest_host/system domtime --sync $deploy_id >/dev/null 2>/dev/null || :
    fi
else
    exit $ret
fi
