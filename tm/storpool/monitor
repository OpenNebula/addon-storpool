#!/bin/bash
#

# -------------------------------------------------------------------------- #
# Copyright 2015-2016, StorPool (storpool.com)                               #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

function splog() { logger -t "tm_sp_${0##*/}[$$]" "$*"; }

DRV_ACTION="$1"
DS_ID="$2"

DS_NAME="one-ds-$DS_ID"
DRIVER_PATH="${0%/*}"
SP_JSON_PATH="/tmp"
SP_FE_JSON_PATH="/tmp/monitor"
SP_TEMPLATE_STATUS_JSON="storpool_template_status.json"
SP_CMD_TEMPLATE_STATUS="cat _SP_JSON_PATH_/_SP_TEMPLATE_STATUS_JSON_"
SP_CMD_TEMPLATE_STATUS_IMAGE="cat _SP_FE_JSON_PATH_/_CLUSTER_ID_/_SP_TEMPLATE_STATUS_JSON_"

if [ -f "${DRIVER_PATH}/../../addon-storpoolrc" ]; then
    source "${DRIVER_PATH}/../../addon-storpoolrc"
fi
if [ -f "/etc/storpool/addon-storpool.conf" ]; then
    source "/etc/storpool/addon-storpool.conf"
fi

function boolTrue()
{
   case "$1" in
       1|y|Y|yes|Yes|YES|true|True|TRUE|on|On|ON)
           return 0
           ;;
       *)
           return 1
   esac
}

if boolTrue "$DEBUG_TM_MONITOR"; then
	splog "$PWD datastore $DS_ID ${DRV_ACTION:0:6}"
	export DEBUG_TM_MONITOR_DS=1
fi

if [ "${DRV_ACTION:0:6}" = "system" ]; then
	SP_CMD_TEMPLATE_STATUS="${SP_CMD_TEMPLATE_STATUS_SYSTEM:-$SP_CMD_TEMPLATE_STATUS}"
	if [ -f "${SP_JSON_PATH}/${SP_TEMPLATE_STATUS_JSON}" ]; then
		:
	else
		echo "{[]}" >"${SP_JSON_PATH}/${SP_TEMPLATE_STATUS_JSON}"
		splog "${SP_JSON_PATH}/${SP_TEMPLATE_STATUS_JSON} not found. Created empty one."
	fi
#	echo "cd $PWD && bash -x $PWD/$0 $*" >/tmp/monitor_system.sh
else
	source "${DRIVER_PATH}/../../tm/storpool/storpool_common.sh"
	oneDsDriverAction "${DRIVER_PATH}"
	#echo "cd $PWD && bash -x $0 $*" >/tmp/monitor-${DS_ID}-${CLUSTER_ID}.sh
	SP_CMD_TEMPLATE_STATUS="${SP_CMD_TEMPLATE_STATUS_IMAGE:-$SP_CMD_TEMPLATE_STATUS}"
	if [ -n "$CLUSTERS_ID" ]; then
		CLUSTERS_ID_ARRAY=($CLUSTERS_ID)
		export CLUSTER_ID="${CLUSTERS_ID_ARRAY[0]}"
	fi
fi # DRV_ACTION

# expand the template variables
SP_CMD_TEMPLATE_STATUS="${SP_CMD_TEMPLATE_STATUS//_SP_TEMPLATE_STATUS_JSON_/$SP_TEMPLATE_STATUS_JSON}"
SP_CMD_TEMPLATE_STATUS="${SP_CMD_TEMPLATE_STATUS//_DATASTORE_ID_/$DS_ID}"
SP_CMD_TEMPLATE_STATUS="${SP_CMD_TEMPLATE_STATUS//_CLUSTER_ID_/$CLUSTER_ID}"
SP_CMD_TEMPLATE_STATUS="${SP_CMD_TEMPLATE_STATUS//_SP_API_HTTP_HOST_/$SP_API_HTTP_HOST}"
SP_CMD_TEMPLATE_STATUS="${SP_CMD_TEMPLATE_STATUS//_SP_JSON_PATH_/$SP_JSON_PATH}"
SP_CMD_TEMPLATE_STATUS="${SP_CMD_TEMPLATE_STATUS//_SP_FE_JSON_PATH_/$SP_FE_JSON_PATH}"
SP_CMD_TEMPLATE_STATUS="${SP_CMD_TEMPLATE_STATUS//_SP_TEMPLATE_STATUS_JSON_/$SP_TEMPLATE_STATUS_JSON}"

#if boolTrue "$DEBUG_TM_MONITOR"; then
#	splog "SP_CMD_TEMPLATE_STATUS:$SP_CMD_TEMPLATE_STATUS"
#fi

while IFS=',' read n t f; do
	if [ "${n//\"/}" = "$DS_NAME" ]; then
		u=$(( t - f ))
		if boolTrue "$DEBUG_TM_MONITOR"; then
			splog "<$DS_ID> u:$((u/1024/1024)) t:$((t/1024/1024)) f:$((f/1024/1024))"
		fi
		case "${DRV_ACTION:0:6}" in
			system)
				echo $((u/1024/1024)) $((t/1024/1024)) $((f/1024/1024))
				;;
			*)
				echo "USED_MB=$((u/1024/1024))"
				echo "TOTAL_MB=$((t/1024/1024))"
				echo "FREE_MB=$((f/1024/1024))"
				;;
		esac
		break
	fi
done < <(eval $SP_CMD_TEMPLATE_STATUS | jq -r '.data|map(select(.name))|.[]|[.name,.stored.capacity,.stored.free]|@csv')

if [ -d "$(readlink -f $BASE_PATH)" ]; then
	if [ -f "$BASE_PATH/.monitor" ]; then
		if boolTrue "$DEBUG_TM_MONITOR"; then
			test -f "$BASE_PATH/.monitor" && DS_DRIVER="$(<$BASE_PATH/.monitor)" || DS_DRIVER="storpool"
			splog "$DS_ID is marked for remote monitoring via IM_MAD using 'tm/$DS_DRIVER/monitor_ds'"
		fi
		exit 0
	fi
	$DRIVER_PATH/monitor_ds "$BASE_PATH"
else
	if [ -n "$BASE_PATH" ]; then
		if [ ! -L "$BASE_PATH" ]; then
			mkdir -p "$BASE_PATH"
			splog "mkdir -p $BASE_PATH ($?)"
		fi
	else
		splog "BASE_PATH variable is empty!"
	fi
fi

exit 0
