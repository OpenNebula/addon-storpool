#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2015-2024, StorPool (storpool.com)                               #
#                                                                            #
# Portions copyright OpenNebula Project (OpenNebula.org), CG12 Labs          #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

#-------------------------------------------------------------------------------
# clone fe:SOURCE host:remote_system_ds/disk.i size
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Get clone arguments from OpenNebula core
#-------------------------------------------------------------------------------

SRC="$1"
DST="$2"
VM_ID="$3"
DS_ID="$4"

TM_PATH="$(dirname "$0")"
# shellcheck source=tm/storpool/storpool_common.sh
source "${TM_PATH}/storpool_common.sh"

splog "SRC=${SRC} DST=${DST} VM_ID=${VM_ID} DS_ID=${DS_ID}"

DST_HOST="$(arg_host "${DST}")"
DST_PATH="$(arg_path "${DST}")"
DST_DIR="$(dirname "${DST_PATH}")"
export DST_DIR  # TBD: remove

DISK_ID="$(echo "${DST}" | awk -F. '{print $NF}')"

#-------------------------------------------------------------------------------
# Get Image information
#-------------------------------------------------------------------------------

oneVmInfo "${VM_ID}" "${DISK_ID}"

#-------------------------------------------------------------------------------
# Get System Datastore information
#-------------------------------------------------------------------------------

oneDatastoreInfo "${VM_DS_ID}"
SYSTEM_DS_SP_QOSCLASS="${DS_SP_QOSCLASS}"

#-------------------------------------------------------------------------------
# Get Image Datastore information
#-------------------------------------------------------------------------------

oneDatastoreInfo "${DS_ID}"
IMAGE_DS_SP_QOSCLASS="${DS_SP_QOSCLASS}"

#-------------------------------------------------------------------------------
# Compute variables
#-------------------------------------------------------------------------------

SRC_PATH="$(arg_path "${SRC}")"
SP_PARENT="${SRC_PATH##*/}"
SP_SNAP="${SRC_PATH##*/}-${DISK_ID}"
SP_VOL="${SP_PARENT}-${VM_ID}-${DISK_ID}"
SP_LINK="/dev/storpool/${SP_VOL}"

export SP_SNAP  # TBD: remove

if boolTrue "NO_VOLUME_TEMPLATE"; then
    SP_TEMPLATE=
else
    SP_TEMPLATE="${ONE_PX}-ds-${DS_ID}"
fi

#if [[ -n "${IMAGE_DS_SP_QOSCLASS}" ]]; then
#    # SP_QOSCLASS in the attributes of the IMAGE DS
#    # overrides the one in the SYSTEM DS
#    SYSTEM_DS_SP_QOSCLASS=""
#fi
IMAGE_DS_SP_QOSCLASS=""  # TODO: review
SP_QOSCLASS="${VM_DISK_SP_QOSCLASS:-${VM_SP_QOSCLASS:-${SYSTEM_DS_SP_QOSCLASS:-${IMAGE_DS_SP_QOSCLASS:-${DEFAULT_QOSCLASS}}}}}"
debug_sp_qosclass

#-------------------------------------------------------------------------------
# Action
#-------------------------------------------------------------------------------

storpoolVolumeCheck "${SP_VOL}"

storpoolVolumeClone "${SP_PARENT}" "${SP_VOL}" "${SP_TEMPLATE}"

trapAdd "storpoolVolumeDelete \"${SP_VOL}\" \"force\""

if [[ -n "${SIZE}" ]]; then
    if [[ "${SIZE}" -gt "${ORIGINAL_SIZE:-0}" ]]; then
        storpoolVolumeResize "${SP_VOL}" "${SIZE}M"
    fi
fi

mode="rw"
xTYPE="NPERS"
if boolTrue "READONLY"; then
    mode="${READONLY_MODE,,}"
    xTYPE+="RO"
fi

storpoolVolumeAttach "${SP_VOL}" "${DST_HOST}" "${mode}"

trapAdd "storpoolVolumeDetach \"${SP_VOL}\" \"\" \"${DST_HOST}\""

storpoolVolumeTag "${SP_VOL}" "virt;${LOC_TAG:-nloc};${VM_TAG:-nvm};${VC_POLICY:+vc-policy};${SP_QOSCLASS:+qc};type;diskid" "one;${LOC_TAG_VAL};${VM_ID};${VC_POLICY};${SP_QOSCLASS};${xTYPE};${DISK_ID}"

#-------------------------------------------------------------------------------
# Get SYSTEM Datastore information
#-------------------------------------------------------------------------------

oneDatastoreInfo "${VM_DS_ID}"

MONITOR_TM_MAD=
if ! boolTrue "DS_SHARED"; then
    MONITOR_TM_MAD="${DS_TM_MAD}"
fi

oneSymlink "${DST_HOST}" "${SP_LINK}" "${DST_PATH}"

trapReset

splog "END ${VM_ID}"
exit 0
