#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2015, StorPool (storpool.com)                                    #
#                                                                            #
# Portions copyright OpenNebula Project (OpenNebula.org), CG12 Labs          #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# mkimage size format host:remote_system_ds/disk.i vmid dsid
#   - size in MB of the image
#   - format for the image
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host
#   - vmid is the id of the VM
#   - dsid is the target datastore (0 is the system datastore)

function splog() { logger -t "tm_sp_${0##*/}" "$*"; }

SIZE=$1
FSTYPE=$2
DST=$3

VM_ID=$4
DS_ID=$5

splog "SIZE=$SIZE FSTYPE=$FSTYPE DST=$DST VM_ID=$VM_ID DS_ID=$DS_ID"

if [ -n "${ONE_LOCATION}" ]; then
    TMCOMMON="$ONE_LOCATION/var/remotes/tm/tm_common.sh"
else
    TMCOMMON="/var/lib/one/remotes/tm/tm_common.sh"
fi

. $TMCOMMON

DRIVER_PATH=$(dirname $0)

#-------------------------------------------------------------------------------
# Get template information from datastore TEMPLATE definition
#-------------------------------------------------------------------------------

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i XPATH_ELEMENTS

while IFS= read -r -d '' element; do
        XPATH_ELEMENTS[i++]="$element"
        done < <(onedatastore show -x $DS_ID | $XPATH  \
                            /DATASTORE/TEMPLATE/SP_REPLICATION \
                            /DATASTORE/TEMPLATE/SP_PLACEALL
                            /DATASTORE/TEMPLATE/SP_PLACETAIL)
unset i
SP_REPLICATION="${XPATH_ELEMENTS[i++]}"
SP_PLACEALL="${XPATH_ELEMENTS[i++]}"
SP_PLACETAIL="${XPATH_ELEMENTS[i++]}"

if [ "$SP_PLACEALL" = "" ]; then
    error_message "Datastore template missing 'SP_PLACEALL' attribute."
    exit -1
fi
if [ "$SP_PLACETAIL" = "" ]; then
    SP_PLACETAIL="$SP_PLACEALL"
fi
if [ -n "${SP_REPLICATION/[123]/}" ] || [ -n "${SP_REPLICATION/[[:digit:]]/}" ]; then
    error_message "Datastore template with unknown value for 'SP_REPLICATION' attribute '$SP_REPLICATION'."
    exit -1
fi

#-------------------------------------------------------------------------------
# Set dst path and dirs
#-------------------------------------------------------------------------------

DST_PATH=`arg_path $DST`
DST_HOST=`arg_host $DST`
DST_DIR=`dirname $DST_PATH`

DISK_ID=$(echo $DST | awk -F. '{print $NF}')

#-------------------------------------------------------------------------------
# Create DST path
#-------------------------------------------------------------------------------

ssh_make_path "$DST_HOST" "$DST_DIR"

SP_SIZE=$SIZE
SP_VOL="one-sys-${VM_ID}-${DISK_ID}-${FSTYPE}"
SP_LINK="/dev/storpool/$SP_VOL"
SP_TEMPLATE="one-ds-$DS_ID"

MKFS_CMD=`mkfs_command "$SP_LINK" "$FSTYPE" "$SIZE"`

MKIMAGE_CMD=$(cat <<EOF
    set -e
    export PATH=/sbin:/usr/sbin/:$PATH
    splog(){ logger -t tm_sp_${0##*/} "\$*"; }

    splog "template $SP_TEMPLATE replication $SP_REPLICATION placeAll $SP_PLACEALL placeTail $SP_PLACETAIL"
    storpool template "$SP_TEMPLATE" replication "$SP_REPLICATION" placeAll "$SP_PLACEALL" placeTail "$SP_PLACETAIL"

    splog "volume $SP_VOL size "${SP_SIZE}M" template $SP_TEMPLATE"
    storpool volume "$SP_VOL" size "${SP_SIZE}M" template "$SP_TEMPLATE"

    splog "attach volume $SP_VOL here"
    storpool attach volume "$SP_VOL" here

    t=15
    while [ ! -L "$SP_LINK" ]; do
        if [ \$t -lt 1 ]; then
            splog "Timeout waiting for $SP_LINK"
            echo "Timeout waiting for $SP_LINK" >&2
            exit -1
        fi
        sleep .5
        t=\$((t-1))
    done

    splog "ln -sf $SP_LINK $DST_PATH"
    ln -sf "$SP_LINK" "$DST_PATH"

    splog "$MKFS_CMD"
    $MKFS_CMD

    splog "END MKIMAGE_CMD"
EOF
)

splog "run MKIMAGE_CMD on $DST_HOST"
ssh_exec_and_log "$DST_HOST" "$MKIMAGE_CMD" \
                 "Error creating volatile disk volume $SP_VOL on $DST_HOST"

exit 0
