#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2015-2024, StorPool (storpool.com)                               #
#                                                                            #
# Portions copyright OpenNebula Project (OpenNebula.org), CG12 Labs          #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

#-------------------------------------------------------------------------------
# ln host:datastore/image host:remote_system_ds/disk.i vmId datastoreId
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Get ln arguments from OpenNebula core
#-------------------------------------------------------------------------------

SRC="$1"
DST="$2"
VM_ID="$3"
DS_ID="$4"

TM_PATH="$(dirname "$0")"
# shellcheck source=tm/storpool/storpool_common.sh
source "${TM_PATH}/storpool_common.sh"

splog "SRC=${SRC} DST=${DST} VM_ID=${VM_ID} DS_ID=${DS_ID}"

#-------------------------------------------------------------------------------
# Do nothing if src and dst are same
#-------------------------------------------------------------------------------

if [[ "${SRC}" == "${DST}" ]]; then
    log "Not moving ${SRC} to ${DST}, they are the same path"
    splog "END same path"
    exit 0
fi

log "vm ${VM_ID} moving ${SRC} to ${DST}"

#-------------------------------------------------------------------------------
# Process source and destination
#-------------------------------------------------------------------------------

SRC_PATH="$(arg_path "${SRC}")"
SRC_HOST="$(arg_host "${SRC}")"
DST_PATH="$(arg_path "${DST}")"
DST_HOST="$(arg_host "${DST}")"
DST_DIR="$(dirname "${DST_PATH}")"
export SRC_PATH SRC_HOST DST_DIR  # TBD: remove
# shellcheck disable=SC2016
DISK_ID="$(echo "${DST_PATH}" | "${AWK:-awk}" -F. '{print $NF}' || true)"

#-------------------------------------------------------------------------------
# Get Image information
#-------------------------------------------------------------------------------

oneVmInfo "${VM_ID}" "${DISK_ID}"

if boolTrue "SHAREABLE"; then
    msg="[ERROR] Unsupported persistent image type"
    msg+=" (${SHAREABLE:+DISK/SHAREABLE=${SHAREABLE} }${PERSISTENT_TYPE:+PERSISTENT_TYPE=${PERSISTENT_TYPE}})."
    splog "${msg}"
    log_error "${msg}"
    exit 1
fi

IMMUTABLE="$(isImmutable "${CLONE}" "${SAVE}" "${READONLY}")"
if boolTrue "IMMUTABLE" && [[ "${TYPE^^}" != "CDROM" ]]; then
    msg="[ERROR] Unsupported persistent image type: IMMUTABLE"
    msg+=" (${PERSISTENT_TYPE:+PERSISTENT_TYPE=${PERSISTENT_TYPE}})."
    splog "${msg}"
    log_error "${msg}"
    exit 1
fi

#-------------------------------------------------------------------------------
# Get System Datastore information
#-------------------------------------------------------------------------------

oneDatastoreInfo "${VM_DS_ID}"
SYSTEM_DS_SP_QOSCLASS="${DS_SP_QOSCLASS}"

#-------------------------------------------------------------------------------
# Get Image Datastore information
#-------------------------------------------------------------------------------

oneDatastoreInfo "${DS_ID}"
IMAGE_DS_SP_QOSCLASS="${DS_SP_QOSCLASS}"

SP_VOL="${SOURCE##*/}"
if boolTrue "NO_VOLUME_TEMPLATE"; then
    SP_TEMPLATE=""
else
    SP_TEMPLATE="${ONE_PX}-ds-${DS_ID}"
fi

if [[ "${TYPE}" == "CDROM" ]]; then
    # omit IMAGE_SP_QOSCLASS
    IMAGE_SP_QOSCLASS=""
#    if [[ -n "${IMAGE_DS_SP_QOSCLASS}" ]]; then
#        # SP_QOSCLASS in the attributes of the IMAGE DS
#        # overrides the one in the SYSTEM DS
#        SYSTEM_DS_SP_QOSCLASS=""
#    fi
    IMAGE_DS_SP_QOSCLASS=""
fi
SP_QOSCLASS="${VM_DISK_SP_QOSCLASS:-${IMAGE_SP_QOSCLASS:-${VM_SP_QOSCLASS:-${SYSTEM_DS_SP_QOSCLASS:-${IMAGE_DS_SP_QOSCLASS:-${DEFAULT_QOSCLASS}}}}}}"
debug_sp_qosclass

splog "SP_VOL=${SP_VOL} SP_TEMPLATE=${SP_TEMPLATE}${SP_QOSCLASS:+ SP_QOSCLASS=${SP_QOSCLASS}}"

#-------------------------------------------------------------------------------
# Enable the destination device
#-------------------------------------------------------------------------------

if [[ -n "${SIZE}" ]]; then
    if [[ "${SIZE}" -gt "${ORIGINAL_SIZE:-0}" ]]; then
        if boolTrue "CLONE"; then
            storpoolVolumeResize "${SP_VOL}" "${SIZE}M"
        else
            splog "not resizing Non-CLONED ${SP_VOL} SIZE=${SIZE} ORIGINAL_SIZE=${ORIGINAL_SIZE}"
        fi
    fi
fi
TAG_TYPE="PERS"
if boolTrue "READONLY"; then
    if [[ "${TYPE}" == "CDROM" ]]; then
        TAG_TYPE="CDROM"
    elif boolTrue "IMMUTABLE"; then
        TAG_TYPE="IMMUT"
        if boolTrue "CLONE"; then
            TAG_TYPE="CLONE"
        fi
    else
        TAG_TYPE+="RO"
    fi
    if boolTrue "IMMUTABLE"; then
        IMMUTABLE_VOL="${SP_VOL}-${VM_ID}-${DISK_ID}"
        if ! storpoolVolumeExists "${IMMUTABLE_VOL}"; then
            storpoolVolumeClone "${SP_VOL}" "${IMMUTABLE_VOL}" "${SP_TEMPLATE}"
        fi
        SP_VOL="${IMMUTABLE_VOL}"
    fi
    SP_MODE="${READONLY_MODE,,}"
fi

storpoolVolumeDetach "${SP_VOL}" "force" "" "all"

storpoolVolumeAttach "${SP_VOL}" "${DST_HOST}" "${SP_MODE}"

storpoolVolumeTag "${SP_VOL}" "virt;${LOC_TAG:-nloc};${VM_TAG:-nvm};${VC_POLICY:+vc-policy};${SP_QOSCLASS:+qc};type;disk-id" \
                                "one;${LOC_TAG_VAL};${VM_ID};${VC_POLICY};${SP_QOSCLASS};${TAG_TYPE};${DISK_ID}"

#-------------------------------------------------------------------------------
# Get SYSTEM Datastore information
#-------------------------------------------------------------------------------

oneDatastoreInfo "${VM_DS_ID}"

MONITOR_TM_MAD=""
if ! boolTrue "DS_SHARED"; then
    MONITOR_TM_MAD="${DS_TM_MAD}"
fi

oneSymlink "${DST_HOST}" "/dev/storpool/${SP_VOL}" "${DST_PATH}"

splog "END ${VM_ID}"
exit 0
