#!/bin/bash
#

# -------------------------------------------------------------------------- #
# Copyright 2015, StorPool (storpool.com)                                    #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

XML=$1
DS_ID=$2

DS_NAME="one-ds-${DS_ID}"
echo "$(pwd) $0 $DS_ID" >/tmp/m.log
if [ -f "${0%/*}/../../tm/storpool/storpool_common.sh" ]; then
	source "${0%/*}/../../tm/storpool/storpool_common.sh"
	oneDatastoreInfo "$DS_ID"
	declare arr
	DO_TEMPLATE=1
	while read l; do
		arr=(${l//,/ })
		DO_TEMPLATE=
	done < <(storpool -j template list | jq -r ".data|map(select(.name|contains(\"$DS_NAME\")))|.[]|[.replication,.placeAll,.placeTail]|@csv")
	i=0
	for e in SP_REPLICATION SP_PLACEALL SP_PLACETAIL SP_IOPS SP_BW; do
		eval a=\$$e
		b=${arr[$i]}
		b=${b//\"/}
		[ "$a" = "$b" ] || DO_TEMPLATE="$DO_TEMPLATE ${e#SP_}:$b"
		i=$((i+1))
	done
	if [ -n "$DO_TEMPLATE" ] ; then
		splog "template $DS_NAME replication $SP_REPLICATION placeAll ${SP_PLACEALL} placeTail ${SP_PLACETAIL:-$SP_PLACEALL} (${DO_TEMPLATE#*[[:space:]]})"
		storpool template "$DS_NAME" replication "$SP_REPLICATION" placeAll "${SP_PLACEALL}" placeTail "${SP_PLACETAIL:-$SP_PLACEALL}" 2>&1 >/dev/null
	fi
fi

while IFS=',' read n u t f; do
	if [ "${n//\"/}" = $DS_NAME ]; then
		case "${XML:0:6}" in
			system)
				echo $((u/1024/1024)) $((t/1024/1024)) $((f/1024/1024))
				;;
			*)
				echo "USED_MB=$((u/1024/1024))"
				echo "TOTAL_MB=$((t/1024/1024))"
				echo "FREE_MB=$((f/1024/1024))"
				;;
		esac
		break
	fi
done < <(${0%/*}/monitor_helper | jq -r '.data|map(select(.name))|.[]|[.name,.stored.used,.stored.capacity,.stored.free]|@csv')
