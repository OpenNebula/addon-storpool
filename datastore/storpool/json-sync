#!/bin/bash
#
# -------------------------------------------------------------------------- #
# Copyright 2016, StorPool (storpool.com)                                    #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

export PATH="/bin:/sbin:/usr/bin:/usr/sbin:$PATH"

function splog() { logger -t "ds_sp_${0##*/}" "$*"; }

SP_TEMPLATE_STATUS_JSON="/tmp/storpool_template_status.json"
SP_MONITOR_HELPER_SYNC="${0%/*}/monitor_helper"
SP_MONITOR_HOST_CMD="onehost list | grep on | awk '{print \$2}'"

# load config
driverPath="${0%/*}"
if [ -f "${drivePath}/../../addon-storpoolrc" ]; then
	source "${driverPath}/../../addon-storpoolrc"
	splog "sourced ${driverPath}/../../addon-storpoolrc"
fi

if [ -f "${drivePath}/../../${0##*/}rc" ]; then
	source "${driverPath}/../../${0##*/}rc"
	splog "sourced ${driverPath}/../../${0##*/}rc"
fi

# dump json to local file
$SP_MONITOR_HELPER_SYNC >"${SP_TEMPLATE_STATUS_JSON}New"
ret=$?
if [ $ret -eq 0 ]; then
	mv -f "${SP_TEMPLATE_STATUS_JSON}New" "${SP_TEMPLATE_STATUS_JSON}"
else
	splog "$SP_MONITOR_HELPER failed! ret=$ret using old $SP_TEMPLATE_STATUS_JSON"
fi

# sync to remote hosts
eval $SP_MONITOR_HOST_CMD | while read rHost; do
#	splog "sync $rHost"
	if [ "$rHost" != "$(hostname -s)" ]; then
		cat "${SP_TEMPLATE_STATUS_JSON}" | ssh -o ConnectTimeout="${sshConnectTimeout:-3}" -o ConnectionAttempts="${sshConnectionAttempts:-3}" "$rHost" \
			"cat > ${SP_TEMPLATE_STATUS_JSON}New && mv \"${SP_TEMPLATE_STATUS_JSON}New\" \"${SP_TEMPLATE_STATUS_JSON}\"" 2>"/tmp/${0##*/}_${rHost}.err"
		ret=$?
		if [ $ret -ne 0 ]; then
			splog "$rHost ${SP_TEMPLATE_STATUS_JSON} returned $ret"
		fi
	fi
done
