#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2015, StorPool (storpool.com)                                    #
#                                                                            #
# Portions copyright OpenNebula Project (OpenNebula.org), CG12 Labs          #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

#-------------------------------------------------------------------------------
# clone base64drvActionXML id
#-------------------------------------------------------------------------------

function splog() { logger -t "ds_sp_${0##*/}" "$*"; }

#-------------------------------------------------------------------------------
# Set up the environment to source common tools
#-------------------------------------------------------------------------------

if [ -n "${ONE_LOCATION}" ]; then
    LIB_LOCATION=$ONE_LOCATION/lib
else
    LIB_LOCATION=/usr/lib/one
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh

#-------------------------------------------------------------------------------
# Get clone and datastore arguments from OpenNebula core
#-------------------------------------------------------------------------------

DRV_ACTION=$1
ID=$2

#-------------------------------------------------------------------------------
# Get Image information
#-------------------------------------------------------------------------------

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/BASE_PATH \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/ID \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SP_REPLICATION \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SP_PLACEALL \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SP_PLACETAIL \
                    /DS_DRIVER_ACTION_DATA/IMAGE/PATH \
                    /DS_DRIVER_ACTION_DATA/IMAGE/PERSISTENT \
                    /DS_DRIVER_ACTION_DATA/IMAGE/FSTYPE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/SOURCE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/TYPE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/DISK_TYPE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/STATE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/CLONING_ID \
                    /DS_DRIVER_ACTION_DATA/IMAGE/CLONING_OPS \
                    /DS_DRIVER_ACTION_DATA/IMAGE/CLONES \
                    /DS_DRIVER_ACTION_DATA/IMAGE/SIZE)

unset i
BASE_PATH="${XPATH_ELEMENTS[i++]}"
DATASTORE_ID="${XPATH_ELEMENTS[i++]}"
BRIDGE_LIST="${XPATH_ELEMENTS[i++]:-$HOSTNAME}"
SP_REPLICATION="${XPATH_ELEMENTS[i++]:-2}"
SP_PLACEALL="${XPATH_ELEMENTS[i++]}"
SP_PLACETAIL="${XPATH_ELEMENTS[i++]}"
IMAGE_PATH="${XPATH_ELEMENTS[i++]}"
PERSISTENT="${XPATH_ELEMENTS[i++]}"
FSTYPE="${XPATH_ELEMENTS[i++]}"
SOURCE="${XPATH_ELEMENTS[i++]}"
TYPE="${XPATH_ELEMENTS[i++]}"
DISK_TYPE="${XPATH_ELEMENTS[i++]}"
STATE="${XPATH_ELEMENTS[i++]}"
CLONING_ID="${XPATH_ELEMENTS[i++]}"
CLONING_OPS="${XPATH_ELEMENTS[i++]}"
CLONES="${XPATH_ELEMENTS[i++]}"
SIZE="${XPATH_ELEMENTS[i++]}"

splog "\
${ID:+ID=$ID }\
${DATASTORE_ID:+DATASTORE_ID=$DATASTORE_ID }\
${STATE:+STATE=$STATE }\
${SIZE:+SIZE=$SIZE }\
${SP_REPLICATION+SP_REPLICATION=$SP_REPLICATION }\
${SP_PLACEALL+SP_PLACEALL=$SP_PLACEALL }\
${SP_PLACETAIL+SP_PLACETAIL=$SP_PLACETAIL }\
${SOURCE:+SOURCE=$SOURCE }\
${PERSISTENT:+PERSISTENT=$PERSISTENT }\
${FSTYPE:+FSTYPE=$FSTYPE }\
${TYPE:+TYPE=$TYPE }\
${DISK_TYPE:+DISK_TYPE=$DISK_TYPE }\
${CLONING_ID:+CLONING_ID=$CLONING_ID }\
${CLONING_OPS:+CLONING_OPS=$CLONING_OPS }\
${CLONES:+CLONES=$CLONES }\
${IMAGE_PATH:+IMAGE_PATH=$IMAGE_PATH }\
"

#-------------------------------------------------------------------------------
# datastore host, validate variables
#-------------------------------------------------------------------------------

DST_HOST=`get_destination_host $ID`

if [ "$DST_HOST" = "" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi
if [ "$SP_PLACEALL" = "" ]; then
    error_message "Datastore template missing 'SP_PLACEALL' attribute."
    exit -1
fi
if [ "$SP_PLACETAIL" = "" ]; then
    SP_PLACETAIL="$SP_PLACEALL"
fi
if [ -n "${SP_REPLICATION/[123]/}" ] || [ -n "${SP_REPLICATION/[[:digit:]]/}" ]; then
    error_message "Datastore template with unknown value for 'SP_REPLICATION' attribute '$SP_REPLICATION'."
    exit -1
fi

SAFE_DIRS=""

SP_PARENT="${IMAGE_PATH##*/}"
SP_SNAP="${SP_PARENT}-${ID}"
SP_VOL="one-img-${ID}"
SP_TEMPLATE="one-ds-${DATASTORE_ID}"
SP_DST="${SP_TEMPLATE}/${SP_VOL}"

#-------------------------------------------------------------------------------
# Clone Image
#-------------------------------------------------------------------------------

CLONE_CMD=$(cat <<EOF
    set -e
    export PATH=/bin:/sbin:/usr/bin:/usr/sbin:\$PATH
    splog(){ logger -t ds_sp_${0##*/} "\$*"; }

    splog "template $SP_TEMPLATE replication $SP_REPLICATION placeAll $SP_PLACEALL placeTail $SP_PLACETAIL"
    storpool template "$SP_TEMPLATE" replication "$SP_REPLICATION" placeAll "$SP_PLACEALL" placeTail "$SP_PLACETAIL"

    splog "volume $SP_VOL baseOn $SP_PARENT template $SP_TEMPLATE"
    storpool volume "$SP_VOL" baseOn "$SP_PARENT" template "$SP_TEMPLATE"

    splog "END CLONE_CMD"
EOF
)

splog "run CLONE_CMD on $DST_HOST"
ssh_exec_and_log "$DST_HOST" "$CLONE_CMD" \
                 "Error cloning $IMAGE_PATH to $IMAGE_NAME in $DST_HOST"

splog "END:$SP_DST"
echo "$SP_DST"
