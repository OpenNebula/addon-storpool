#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2015-2021, StorPool (storpool.com)                               #
#                                                                            #
# Portions copyright OpenNebula Project, OpenNebula Systems                  #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# ------------ Set up the environment to source common tools ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh

LOG_PREFIX="ds"

source ${DRIVER_PATH}/../../tm/storpool/storpool_common.sh

# -------- Get tm and datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

dumpTemplate "$DRV_ACTION"

oneDsDriverAction "$DRIVER_PATH"

if [ -n "$EXPORT_BRIDGE_LIST" ]; then
    BRIDGE_LIST="$EXPORT_BRIDGE_LIST"
fi

DST_HOST=`get_destination_host $ID`

if [ -z "$DST_HOST" ]; then
    msg="Error: Datastore template missing 'BRIDGE_LIST' attribute."
    splog "$msg"
    error_message "$msg"
    exit -1
fi

SP_VOL="${SOURCE#*/}"
SP_SNAPSHOT="$SP_VOL-export-$(mktemp --dry-run XXXXXX)"
SP_LINK="/dev/storpool/$SP_SNAPSHOT"

DISPOSE="YES"

if [ -n "$EXPORT_FILE_FORMAT" ]; then
    case "${EXPORT_FILE_FORMAT,,}" in
        raw)
            EXPORT_FILE_FORMAT=raw
            ;;
        qcow|qcow2)
            EXPORT_FILE_FORMAT="${EXPORT_FILE_FORMAT,,}"
            ;;
        *)
            msg="Error: Unsupported configuration! EXPORT_FILE_FORMAT '$EXPORT_FILE_FORMAT' but raw,qcow or nudefined variable expected"
            splog "$msg"
            error_message "$msg"
            exit -1
            ;;
    esac
fi

EXPORT_DELETE="${ONE_LOCATION:-/var/lib/one}/remotes/datastore/storpool/export.delete"

storpoolVolumeInfo "$SP_VOL"

if [ -n "$V_SIZE" ]; then
    SIZE="$((V_SIZE/1024/1024))"
else
    msg="Error: Can't get the SIZE of volume $SP_VOL "
    splog "$msg"
    error_message "$msg"
    exit -1
fi

storpoolSnapshotCreate "$SP_SNAPSHOT" "$SP_VOL"

storpoolVolumeAttach "$SP_SNAPSHOT" "$DST_HOST" "ro" "snapshot"

if [ -n "$EXPORT_FILE_FORMAT" ]; then
    FORMAT="$EXPORT_FILE_FORMAT"
    EXPORT_FILE="${STAGING_DIR:-/var/tmp}/$SP_SNAPSHOT"
    CMD=$(cat <<EOF
set -o pipefail
logger -t "ds_sp_export_r[$$]" -- "Begin $EXPORT_FILE (\$?)"
$QEMU_IMG convert $EXPORT_QEMU_IMG_ARGS -O $FORMAT $SP_LINK $EXPORT_FILE 2>&1 >"/tmp/export$$.log"
logger -t "ds_sp_export_r[$$]" -- "$QEMU_IMG convert $EXPORT_QEMU_IMG_ARGS -O $FORMAT $SP_LINK $EXPORT_FILE (\$?)"
while read -u 4 l; do
  logger -t "ds_sp_export_r[$$]" -- "LOG:\$l"
done 4< <("cat /tmp/export$$.log")
rm -f "/tmp/export$$.log"
${DU} -Lm "${EXPORT_FILE}" | cut -f1
EOF
)
    splog "CMD=$CMD"
    QCOW_SIZE=$(ssh_monitor_and_log "$DST_HOST" "$CMD" "export file convert ")
    splog "$EXPORT_FILE SIZE=$SIZE QCOW_SIZE=$QCOW_SIZE ($?)"
    storpoolVolumeDetach "$SP_SNAPSHOT" "force" "$DST_HOST"
    storpoolSnapshotDelete "$SP_SNAPSHOT"
    DISPOSE_CMD="$EXPORT_DELETE $DST_HOST $EXPORT_FILE"
else
    FORMAT="raw"
    EXPORT_FILE="$SP_LINK"
    DISPOSE_CMD="$EXPORT_DELETE $DST_HOST $EXPORT_FILE"
fi

splog "$EXPORT_FILE calculating checksum ..."
CHECKSUM=$($SSH "$DST_HOST" "set -o pipefail&&openssl dgst -md5 $EXPORT_FILE | cut -d' ' -f2")
RET=$?
splog "$EXPORT_FILE CHECKSUM $CHECKSUM ($RET)"
if [ $RET -ne 0 ]; then
    msg="Error: Can't calculate MD5 checksum for $EXPORT_FILE"
    splog "$msg"
    error_message "$msg"
    if [ -z "$EXPORT_FILE_FORMAT" ]; then
        storpoolVolumeDetach "$SP_SNAPSHOT" "force" "$DST_HOST"
        storpoolSnapshotDelete "$SP_SNAPSHOT"
    fi
    exit -1
fi

IMPORT_SOURCE="${EXPORT_TRANSPORT:-ssh}://$DST_HOST:$EXPORT_FILE"

splog "IMPORT_SOURCE=$IMPORT_SOURCE MD5=$CHECKSUM SIZE=$SIZE${QCOW_SIZE:+ QCOW_SIZE=$QCOW_SIZE} FORMAT=$FORMAT${EXPORT_FILE_FORMAT:+ EXPORT_FILE_FORMAT=$EXPORT_FILE_FORMAT} DISPOSE=$DISPOSE DISPOSE_CMD=$DISPOSE_CMD"

cat <<EOF
<IMPORT_INFO>
    <IMPORT_SOURCE><![CDATA[$IMPORT_SOURCE]]></IMPORT_SOURCE>
    <MD5><![CDATA[$CHECKSUM]]></MD5>
    <SIZE><![CDATA[$SIZE]]></SIZE>
    <FORMAT><![CDATA[$FORMAT]]></FORMAT>
    <DISPOSE><![CDATA[$DISPOSE]]></DISPOSE>
    <DISPOSE_CMD><![CDATA[$DISPOSE_CMD]]></DISPOSE_CMD>
</IMPORT_INFO>
EOF
