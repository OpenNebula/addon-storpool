#!/usr/bin/env python

# -------------------------------------------------------------------------- #
# Copyright 2015, StorPool (storpool.com)                                    #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

#-------------------------------------------------------------------------------
# monitor DATASTORE_ID
#-------------------------------------------------------------------------------

from sys import argv

from storpool.spconfig import SPConfig
from storpool.spapi import Api, ApiError

cfg = SPConfig()

api = Api(host=cfg['SP_API_HTTP_HOST'], port=cfg['SP_API_HTTP_PORT'], auth=cfg['SP_AUTH_TOKEN'])

DS = 'one-ds-{0}'.format(argv[1])

for t in api.volumeTemplatesStatus():
    if t.name == DS:
        estUsed = t.storedSize
        if t.placeAll == t.placeTail:
            estTotal = t.availablePlaceTail / t.replication
        else:
            estTotal = min(t.availablePlaceAll, t.availablePlaceTail)

        used_mb = estUsed / 1024 / 1024
        total_mb = estTotal / 1024 / 1024
        free_mb = (estTotal - estUsed) / 1024 / 1024
        print "{used} {total} {free}".format(used=used_mb, total=total_mb, free=free_mb)
        break
